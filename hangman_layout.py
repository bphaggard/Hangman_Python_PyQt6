# Form implementation generated from reading ui file 'hangman_layout.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import random
from PyQt6 import QtCore, QtGui, QtWidgets
from hangman_words import word_list  # Your list of words


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(486, 500)
        self.verticalLayout = QtWidgets.QVBoxLayout(Dialog)
        self.verticalLayout.setObjectName("verticalLayout")

        self.label_name = QtWidgets.QLabel(parent=Dialog)
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        self.label_name.setFont(font)
        self.label_name.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_name.setObjectName("label_name")
        self.verticalLayout.addWidget(self.label_name)

        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem)

        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")

        self.label_1 = QtWidgets.QLabel(parent=Dialog)
        self.label_1.setObjectName("label_1")
        self.horizontalLayout.addWidget(self.label_1)

        self.label_hidden = QtWidgets.QLabel(parent=Dialog)
        self.label_hidden.setObjectName("label_hidden")
        self.horizontalLayout.addWidget(self.label_hidden)
        self.verticalLayout.addLayout(self.horizontalLayout)

        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem1)

        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")

        self.label_2 = QtWidgets.QLabel(parent=Dialog)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_2.addWidget(self.label_2)

        self.label_lives = QtWidgets.QLabel(parent=Dialog)
        self.label_lives.setObjectName("label_lives")
        self.horizontalLayout_2.addWidget(self.label_lives)
        self.verticalLayout.addLayout(self.horizontalLayout_2)

        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem2)

        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")

        self.label_3 = QtWidgets.QLabel(parent=Dialog)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_3.addWidget(self.label_3)

        self.lineEdit = QtWidgets.QLineEdit(parent=Dialog)
        self.lineEdit.setObjectName("lineEdit")
        self.horizontalLayout_3.addWidget(self.lineEdit)
        self.verticalLayout.addLayout(self.horizontalLayout_3)

        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_2")

        spacerItem7 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum,
                                            QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem7)

        self.label_guess_show1 = QtWidgets.QLabel(parent=Dialog)
        self.label_guess_show1.setObjectName("label_guess_show1")
        self.horizontalLayout_4.addWidget(self.label_guess_show1)

        # self.label_guess_show2 = QtWidgets.QLabel(parent=Dialog)
        # self.label_guess_show2.setObjectName("label_guess_show2")
        # self.horizontalLayout_4.addWidget(self.label_guess_show2)

        self.wrong_letters_show = QtWidgets.QLabel(parent=Dialog)
        self.wrong_letters_show.setObjectName("wrong_letters_show")
        self.horizontalLayout_4.addWidget(self.wrong_letters_show)
        self.verticalLayout.addLayout(self.horizontalLayout_4)

        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem3)

        # Check button
        self.pushButton = QtWidgets.QPushButton(parent=Dialog)
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout.addWidget(self.pushButton)

        # Restart button
        self.restartButton = QtWidgets.QPushButton(parent=Dialog)
        self.restartButton.setObjectName("restartButton")
        self.restartButton.setText("Restart Game")
        self.restartButton.setEnabled(False)  # Disabled until the game ends
        self.verticalLayout.addWidget(self.restartButton)

        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem4)

        self.label_info = QtWidgets.QLabel(parent=Dialog)
        self.label_info.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_info.setObjectName("label_info")
        self.verticalLayout.addWidget(self.label_info)

        spacerItem5 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem5)

        self.label_result = QtWidgets.QLabel(parent=Dialog)
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        self.label_result.setFont(font)
        self.label_result.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_result.setObjectName("label_result")
        self.verticalLayout.addWidget(self.label_result)

        spacerItem6 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem6)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        # Initialize the game when the UI loads
        self.initialize_game()

        # Connect buttons
        self.pushButton.clicked.connect(self.check_letter)
        self.restartButton.clicked.connect(self.restart_game)

    def initialize_game(self):
        self.word_to_guess = random.choice(word_list).lower()
        self.correct_letters = []
        self.lives = 6
        self.game_over = False
        self.wrong_letters = []
        self.letters = ""

        self.hidden_word_display = "_ " * len(self.word_to_guess)
        self.label_hidden.setText(self.hidden_word_display)
        self.label_lives.setText(str(self.lives))
        self.label_info.setText("Game started! Enter a letter.")
        self.label_result.setText("")
        self.restartButton.setEnabled(False)

        # self.label_guess_show2.setText(self.word_to_guess)

    def check_letter(self):
        if self.game_over:
            self.label_info.setText("Game is over. Click Restart to play again.")
            return

        user_letter = self.lineEdit.text().lower().strip()
        self.lineEdit.clear()

        # Validate input: must be a single letter
        if not user_letter or len(user_letter) != 1 or not user_letter.isalpha():
            self.label_info.setText("Please enter a valid single letter.")
            return

        # Check if the letter was already guessed
        if user_letter in self.correct_letters:
            self.label_info.setText(f"You've already guessed '{user_letter}'.")
            return

        if user_letter in self.wrong_letters:
            self.label_info.setText(f"You've already guessed '{user_letter}' and it was incorrect.")
            return

        # Update correct or wrong letters
        if user_letter in self.word_to_guess:
            self.correct_letters.append(user_letter)
            self.label_info.setText(f"Good job! '{user_letter}' is in the word.")
        else:
            self.wrong_letters.append(user_letter)
            self.lives -= 1
            self.label_lives.setText(str(self.lives))
            self.label_info.setText(f"'{user_letter}' is not in the word. You lost a life.")

        # Rebuild guessed_word from self.correct_letters
        guessed_word = "".join(
            letter if letter in self.correct_letters else "_ "
            for letter in self.word_to_guess
        )
        self.label_hidden.setText(guessed_word)

        # Show wrong letters
        self.wrong_letters_show.setText(self.letters.join(self.wrong_letters))

        # Check for win
        if "_" not in guessed_word:
            self.game_over = True
            self.label_info.setText("Congratulations! You guessed the word!")
            self.label_result.setText("You WON!")
            self.restartButton.setEnabled(True)

        # Check for loss
        if self.lives == 0 and "_" in guessed_word:
            self.game_over = True
            self.label_hidden.setText(self.word_to_guess)  # Reveal the full word
            self.label_info.setText(f"You lost! The word was '{self.word_to_guess}'.")
            self.label_result.setText("Game Over!")
            self.restartButton.setEnabled(True)

    def restart_game(self):
        # Reset game state
        self.word_to_guess = random.choice(word_list)
        self.correct_letters = []
        self.wrong_letters = []
        self.lives = 6
        self.game_over = False

        # Update UI
        self.label_lives.setText(str(self.lives))
        self.label_hidden.setText("_ " * len(self.word_to_guess))
        self.label_info.setText("Game restarted! Guess a letter.")
        self.label_result.setText("")
        self.restartButton.setEnabled(False)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Hangman Game"))
        self.label_name.setText(_translate("Dialog", "Hangman Game"))
        self.label_1.setText(_translate("Dialog", "Word to guess:"))
        self.label_2.setText(_translate("Dialog", "Lives left:"))
        self.label_3.setText(_translate("Dialog", "Guess the letter:"))
        self.label_guess_show1.setText(_translate("Dialog", "Wrong guessed letters:"))
        self.pushButton.setText(_translate("Dialog", "Check Letter"))
        self.label_info.setText(_translate("Dialog", "Enter a letter and click Check"))
        self.label_result.setText("")


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec())
